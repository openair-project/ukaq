[{"path":[]},{"path":"https://openair-project.github.io/ukaq/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, colour, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://openair-project.github.io/ukaq/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behaviour contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behaviour include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://openair-project.github.io/ukaq/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://openair-project.github.io/ukaq/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://openair-project.github.io/ukaq/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible via GitHub platform. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://openair-project.github.io/ukaq/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://openair-project.github.io/ukaq/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behaviour deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behaviour inappropriate. public apology may requested.","code":""},{"path":"https://openair-project.github.io/ukaq/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behaviour. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://openair-project.github.io/ukaq/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behaviour. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://openair-project.github.io/ukaq/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://openair-project.github.io/ukaq/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://openair-project.github.io/ukaq/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to ukaq","title":"Contributing to ukaq","text":"outlines propose change ukaq.","code":""},{"path":"https://openair-project.github.io/ukaq/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to ukaq","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://openair-project.github.io/ukaq/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to ukaq","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex.","code":""},{"path":"https://openair-project.github.io/ukaq/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to ukaq","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"openair-project/ukaq\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header).","code":""},{"path":"https://openair-project.github.io/ukaq/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to ukaq","text":"Care taken new code follows style similar rest ukaq. use roxygen2, Markdown syntax, documentation.","code":""},{"path":"https://openair-project.github.io/ukaq/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to ukaq","text":"Please note ukaq project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://openair-project.github.io/ukaq/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 ukaq authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://openair-project.github.io/ukaq/articles/ukaq.html","id":"metadata","dir":"Articles","previous_headings":"","what":"Metadata","title":"Importing UK Air Quality Data","text":"first step importing air quality data consult import_ukaq_meta(). Let’s look AURN metadata now: output can customised using different function arguments. example, lets find AURN sites measured O3 2020. import data, please make note relevant site codes “code” column (, appropriate, “source” network data).","code":"import_ukaq_meta(\"aurn\") #> # A tibble: 316 × 14 #>    source code  site    site_type latitude longitude start_date end_date   zone  #>    <chr>  <chr> <chr>   <chr>        <dbl>     <dbl> <date>     <date>     <chr> #>  1 aurn   ABD   Aberde… Urban Ba…     57.2    -2.09  1999-09-18 2021-09-20 Nort… #>  2 aurn   ABD9  Aberde… Urban Ba…     57.2    -2.09  2021-10-01 NA         Nort… #>  3 aurn   ABD7  Aberde… Urban Tr…     57.1    -2.11  2008-01-01 2024-12-31 Nort… #>  4 aurn   ABD8  Aberde… Urban Tr…     57.1    -2.09  2016-02-09 NA         Nort… #>  5 aurn   ARM6  Armagh… Urban Tr…     54.4    -6.65  2009-01-01 NA         Nort… #>  6 aurn   AH    Aston … Rural Ba…     52.5    -3.03  1986-06-26 NA         Nort… #>  7 aurn   ACTH  Auchen… Rural Ba…     55.8    -3.24  2006-01-01 NA         Cent… #>  8 aurn   AYLA  Aylesb… Urban Tr…     51.8    -0.794 2025-06-19 NA         Sout… #>  9 aurn   BAAR  Ballym… Urban Tr…     54.9    -6.27  2017-04-01 NA         Nort… #> 10 aurn   BALM  Ballym… Urban Ba…     54.9    -6.25  2010-01-01 NA         Nort… #> # ℹ 306 more rows #> # ℹ 5 more variables: agglomeration <chr>, zagglom <chr>, #> #   local_authority <chr>, lmam_provider <chr>, lmam_code <chr> meta <- import_ukaq_meta(\"aurn\", year = 2020, by_pollutant = TRUE) meta[meta$pollutant == \"o3\",] #> # A tibble: 78 × 16 #>    source code  site           site_type latitude longitude pollutant start_date #>    <chr>  <chr> <chr>          <chr>        <dbl>     <dbl> <chr>     <date>     #>  1 aurn   ABD   Aberdeen       Urban Ba…     57.2     -2.09 o3        2003-08-01 #>  2 aurn   AH    Aston Hill     Rural Ba…     52.5     -3.03 o3        1986-06-26 #>  3 aurn   ACTH  Auchencorth M… Rural Ba…     55.8     -3.24 o3        2006-11-01 #>  4 aurn   BAR3  Barnsley Gawb… Urban Ba…     53.6     -1.51 o3        1997-07-07 #>  5 aurn   BEL2  Belfast Centre Urban Ba…     54.6     -5.93 o3        1992-03-08 #>  6 aurn   BIRR  Birmingham A4… Urban Tr…     52.5     -1.87 o3        2016-09-09 #>  7 aurn   AGRN  Birmingham Ac… Urban Ba…     52.4     -1.83 o3        2011-03-18 #>  8 aurn   BMLD  Birmingham La… Urban Ba…     52.5     -1.92 o3        2019-10-09 #>  9 aurn   BLC2  Blackpool Mar… Urban Ba…     53.8     -3.01 o3        2005-06-14 #> 10 aurn   BORN  Bournemouth    Urban Ba…     50.7     -1.83 o3        2003-02-27 #> # ℹ 68 more rows #> # ℹ 8 more variables: end_date <date>, ratified_to <date>, zone <chr>, #> #   agglomeration <chr>, zagglom <chr>, local_authority <chr>, #> #   lmam_provider <chr>, lmam_code <chr>"},{"path":"https://openair-project.github.io/ukaq/articles/ukaq.html","id":"continuous-monitoring","dir":"Articles","previous_headings":"","what":"Continuous Monitoring","title":"Importing UK Air Quality Data","text":"Arguably useful data made available ukaq termed ‘continuous monitoring data’ - commonly hourly data. access , may use import_ukaq_measurements() requires two key pieces information - site code metadata table year (years) import. import_ukaq_measurements() clever enough work specific monitoring network site member , sometimes can ambiguity. source argument allows specified. Consider source defining pool one networks ukaq use align code actual monitoring station. reality, issue “locally managed” English sites share site codes Ricardo-managed sites (e.g., “AD1” ‘Aberdeen King Street’ AURN site ‘Adur - Shoreham--Sea’ Sussex AQ site). Consider difference two outputs . Data can augmented three kinds extra information make functions useful: append_meteorology add modelled wind speed (ws), wind direction (wd), air temperature (temp) networks exists. defaults TRUE. append_quality_flag add column (columns) indicate whether pollutant ratified. defaults FALSE. append_metadata add metadata columns defined metadata_columns. useful append information like latitude/longitude mapping, example. defaults FALSE, chosen metadata site type, latitude longitude. demonstrate ’ll just grab couple pollutants Marylebone Road (\"my1\") using pollutant argument, keep output small. default, data put ‘wide’ format, different pollutants different columns. many applications R, may want data “long” format. data structure, simply set pivot = \"long\". Note interact ‘append’ arguments - meteorological data site metadata aren’t pivoted pollutants, single quality flag alongside ‘value’ column. Finally, data types available interest, can used data_type argument import_ukaq_measurements(). include: \"hourly\": Hourly data (default). \"daily\": Daily average data. \"15_min\": 15-minute average SO2 concentrations. \"8_hour\": 8-hour rolling mean concentrations O3 CO. \"24_hour\": 24-hour rolling mean concentrations particulates. \"daily_max_8\": Maximum daily rolling 8-hour maximum O3 CO. top data types, three additional data_types can accessed functions, detailed sections .","code":"import_ukaq_measurements(c(\"my1\", \"kc1\"), year = 2024L) #> # A tibble: 17,568 × 44 #>    source date                code  site        o3    no   no2   nox   so2    co #>    <chr>  <dttm>              <fct> <chr>    <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #>  1 aurn   2024-01-01 00:00:00 MY1   London …  39.7  22.1  30.4  64.3  1.33 0.244 #>  2 aurn   2024-01-01 01:00:00 MY1   London …  23.7  43.0  48.4 114.   2.39 0.373 #>  3 aurn   2024-01-01 02:00:00 MY1   London …  31.3  28.9  41.1  85.5  1.86 0.268 #>  4 aurn   2024-01-01 03:00:00 MY1   London …  34.1  23.0  37.5  72.7  1.60 0.314 #>  5 aurn   2024-01-01 04:00:00 MY1   London …  37.1  23.2  37.9  73.4  1.33 0.256 #>  6 aurn   2024-01-01 05:00:00 MY1   London …  39.5  14.6  28.5  50.9  1.06 0.244 #>  7 aurn   2024-01-01 06:00:00 MY1   London …  35.5  17.7  34.2  61.2  1.06 0.221 #>  8 aurn   2024-01-01 07:00:00 MY1   London …  37.7  13.0  31.2  50.9  1.06 0.186 #>  9 aurn   2024-01-01 08:00:00 MY1   London …  33.1  20.1  37.7  68.7  1.06 0.186 #> 10 aurn   2024-01-01 09:00:00 MY1   London …  32.7  17.0  37.3  63.5  1.06 0.163 #> # ℹ 17,558 more rows #> # ℹ 34 more variables: pm10 <dbl>, pm2.5 <dbl>, ethane <dbl>, ethene <dbl>, #> #   ethyne <dbl>, propane <dbl>, propene <dbl>, ibutane <dbl>, nbutane <dbl>, #> #   `1butene` <dbl>, t2butene <dbl>, c2butene <dbl>, ipentane <dbl>, #> #   npentane <dbl>, `13bdiene` <dbl>, t2penten <dbl>, `1penten` <dbl>, #> #   `2mepent` <dbl>, isoprene <dbl>, nhexane <dbl>, nheptane <dbl>, #> #   ioctane <dbl>, noctane <dbl>, benzene <dbl>, toluene <dbl>, … import_ukaq_measurements(\"ad1\", year = 2020L) #> Warning in import_ukaq_measurements(\"ad1\", year = 2020L): Ambiguous Codes Detected: AD1. #> Importing sites using following order of preference: aurn, aqe, saqn, waqn, niaqn, lmam #> # A tibble: 8,784 × 13 #>    source date                code  site        no   no2   nox  pm10 pm2.5   pm1 #>    <chr>  <dttm>              <fct> <chr>    <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #>  1 saqn   2020-01-01 00:00:00 AD1   Aberdee… 4.22  17.8  24.3  15.6  13.1  12.4  #>  2 saqn   2020-01-01 01:00:00 AD1   Aberdee… 6.04  19.5  28.8   7.24  5.92  5.33 #>  3 saqn   2020-01-01 02:00:00 AD1   Aberdee… 5.07  21.1  28.9   9.75  8.35  7.93 #>  4 saqn   2020-01-01 03:00:00 AD1   Aberdee… 1.53   9.97 12.3   5.00  3.83  3.37 #>  5 saqn   2020-01-01 04:00:00 AD1   Aberdee… 1.02   9.83 11.4   5.00  3.81  3.32 #>  6 saqn   2020-01-01 05:00:00 AD1   Aberdee… 0.716  5.16  6.25  3.86  2.94  2.59 #>  7 saqn   2020-01-01 06:00:00 AD1   Aberdee… 0.575  5.79  6.67  4.24  3.31  2.97 #>  8 saqn   2020-01-01 07:00:00 AD1   Aberdee… 1.03   7.99  9.57  3.88  3.19  2.96 #>  9 saqn   2020-01-01 08:00:00 AD1   Aberdee… 8.26  23.6  36.2   4.49  3.71  3.48 #> 10 saqn   2020-01-01 09:00:00 AD1   Aberdee… 6.07  26.6  35.9   6.32  5.04  4.80 #> # ℹ 8,774 more rows #> # ℹ 3 more variables: wd <dbl>, ws <dbl>, temp <dbl>  import_ukaq_measurements(\"ad1\", year = 2020L, source = \"lmam\") #> # A tibble: 8,784 × 8 #>    source date                code  site                    no   no2   nox  pm10 #>    <chr>  <dttm>              <fct> <chr>                <dbl> <dbl> <dbl> <dbl> #>  1 lmam   2020-01-01 00:00:00 AD1   Adur - Shoreham-by-… NA     NA    NA      39 #>  2 lmam   2020-01-01 01:00:00 AD1   Adur - Shoreham-by-… 23.7   52.2  88.0    38 #>  3 lmam   2020-01-01 02:00:00 AD1   Adur - Shoreham-by-… 12.5   45.9  65.2    36 #>  4 lmam   2020-01-01 03:00:00 AD1   Adur - Shoreham-by-… 12.5   47.2  65.6    34 #>  5 lmam   2020-01-01 04:00:00 AD1   Adur - Shoreham-by-… 26.2   52.4  92.2    38 #>  6 lmam   2020-01-01 05:00:00 AD1   Adur - Shoreham-by-…  6.24  30.8  39.8    37 #>  7 lmam   2020-01-01 06:00:00 AD1   Adur - Shoreham-by-…  7.48  27.9  39.6    37 #>  8 lmam   2020-01-01 07:00:00 AD1   Adur - Shoreham-by-… 15.0   30.6  52.8    34 #>  9 lmam   2020-01-01 08:00:00 AD1   Adur - Shoreham-by-… 15.0   30.6  52.8    38 #> 10 lmam   2020-01-01 09:00:00 AD1   Adur - Shoreham-by-… 36.2   37.1  91.8    33 #> # ℹ 8,774 more rows import_ukaq_measurements(   \"my1\",    2020L,     pollutant = c(\"no2\", \"o3\"),   append_metadata = TRUE,    append_meteorology = FALSE,    append_quality_flag = TRUE,    metadata_columns = \"zagglom\" ) #> # A tibble: 8,784 × 9 #>    code  source date                site          no2    o3 o3_qc no2_qc zagglom #>    <fct> <chr>  <dttm>              <chr>       <dbl> <dbl> <lgl> <lgl>  <chr>   #>  1 MY1   aurn   2020-01-01 00:00:00 London Mar…  45.8  1.73 TRUE  TRUE   Greate… #>  2 MY1   aurn   2020-01-01 01:00:00 London Mar…  52.6  1.93 TRUE  TRUE   Greate… #>  3 MY1   aurn   2020-01-01 02:00:00 London Mar…  44.8  2.00 TRUE  TRUE   Greate… #>  4 MY1   aurn   2020-01-01 03:00:00 London Mar…  40.2  2.05 TRUE  TRUE   Greate… #>  5 MY1   aurn   2020-01-01 04:00:00 London Mar…  47.3  2.99 TRUE  TRUE   Greate… #>  6 MY1   aurn   2020-01-01 05:00:00 London Mar…  40.4  2.89 TRUE  TRUE   Greate… #>  7 MY1   aurn   2020-01-01 06:00:00 London Mar…  42.7  2.99 TRUE  TRUE   Greate… #>  8 MY1   aurn   2020-01-01 07:00:00 London Mar…  40.7  1.90 TRUE  TRUE   Greate… #>  9 MY1   aurn   2020-01-01 08:00:00 London Mar…  42.6  1.85 TRUE  TRUE   Greate… #> 10 MY1   aurn   2020-01-01 09:00:00 London Mar…  38.3  1.95 TRUE  TRUE   Greate… #> # ℹ 8,774 more rows import_ukaq_measurements(   \"my1\",   2020L,   pivot = \"long\" ) #> # A tibble: 377,712 × 9 #>    source date                code  site          wd    ws  temp pollutant value #>    <chr>  <dttm>              <fct> <chr>      <dbl> <dbl> <dbl> <chr>     <dbl> #>  1 aurn   2020-01-01 00:00:00 MY1   London Ma…  92.7   2.1   2.3 o3         1.73 #>  2 aurn   2020-01-01 01:00:00 MY1   London Ma…  98.3   2.1   1.4 o3         1.93 #>  3 aurn   2020-01-01 02:00:00 MY1   London Ma… 117.    2.3   1   o3         2.00 #>  4 aurn   2020-01-01 03:00:00 MY1   London Ma… 131.    1.8   0.8 o3         2.05 #>  5 aurn   2020-01-01 04:00:00 MY1   London Ma… 109.    1.7   0.8 o3         2.99 #>  6 aurn   2020-01-01 05:00:00 MY1   London Ma…  84.3   1.1   0   o3         2.89 #>  7 aurn   2020-01-01 06:00:00 MY1   London Ma…  86.9   1.2  -0.4 o3         2.99 #>  8 aurn   2020-01-01 07:00:00 MY1   London Ma… 143     1.3   0.9 o3         1.90 #>  9 aurn   2020-01-01 08:00:00 MY1   London Ma… 168.    1.1   1.5 o3         1.85 #> 10 aurn   2020-01-01 09:00:00 MY1   London Ma… 186.    0.6   1.5 o3         1.95 #> # ℹ 377,702 more rows"},{"path":"https://openair-project.github.io/ukaq/articles/ukaq.html","id":"monthly-annual-statistics","dir":"Articles","previous_headings":"","what":"Monthly & Annual Statistics","title":"Importing UK Air Quality Data","text":"examining entire networks, may useful examine aggregated data. import_ukaq_summaries() allows \"monthly\" \"annual\" data types imported. function works differently import_ukaq_measurements() key ways. pre-calculated monthly annual data capture also returned data. code optional (defaulting NULL) make function return data available given source year. Many arguments mentioned section also available function, including pollutant, append_metadata, metadata_columns, pivot.","code":"import_ukaq_summaries(year = 2024, source = \"aurn\") #> # A tibble: 187 × 89 #>    source date        year code  site            o3 o3.capture o3.summer.capture #>    <chr>  <date>     <int> <chr> <chr>        <dbl>      <dbl>             <dbl> #>  1 aurn   2024-01-01  2024 ABD7  Aberdeen Un…  NA       NA               NA      #>  2 aurn   2024-01-01  2024 ABD8  Aberdeen We…  NA       NA               NA      #>  3 aurn   2024-01-01  2024 ABD9  Aberdeen Er…  56.0      0.878            0.959  #>  4 aurn   2024-01-01  2024 ACTH  Auchencorth…  59.2      0.998            0.999  #>  5 aurn   2024-01-01  2024 AH    Aston Hill    63.4      0.991            0.991  #>  6 aurn   2024-01-01  2024 ARM6  Armagh Road…  NA       NA               NA      #>  7 aurn   2024-01-01  2024 BAAR  Ballymena A…  NA       NA               NA      #>  8 aurn   2024-01-01  2024 BALM  Ballymena B…  NA       NA               NA      #>  9 aurn   2024-01-01  2024 BAR3  Barnsley Ga…  56.9      0.292            0.0947 #> 10 aurn   2024-01-01  2024 BBRD  Birkenhead …  NA       NA               NA      #> # ℹ 177 more rows #> # ℹ 81 more variables: o3.daily.max.8hour <dbl>, o3.aot40v <int>, #> #   o3.aot40f <int>, somo35 <dbl>, somo35.capture <dbl>, no <dbl>, #> #   no.capture <dbl>, no2 <dbl>, no2.capture <dbl>, nox <dbl>, #> #   nox.capture <dbl>, so2 <dbl>, so2.capture <dbl>, co <dbl>, #> #   co.capture <dbl>, pm10 <dbl>, pm10.capture <dbl>, pm2.5 <dbl>, #> #   pm2.5.capture <dbl>, gr10 <dbl>, gr10.capture <dbl>, gr2.5 <dbl>, … import_ukaq_summaries(year = 2024, source = \"aurn\", pivot = \"long\") #> # A tibble: 8,228 × 8 #>    source date        year code  site                    pollutant  mean capture #>    <chr>  <date>     <int> <chr> <chr>                   <chr>     <dbl>   <dbl> #>  1 aurn   2024-01-01  2024 ABD7  Aberdeen Union Street … o3         NA    NA     #>  2 aurn   2024-01-01  2024 ABD8  Aberdeen Wellington Ro… o3         NA    NA     #>  3 aurn   2024-01-01  2024 ABD9  Aberdeen Erroll Park    o3         56.0   0.878 #>  4 aurn   2024-01-01  2024 ACTH  Auchencorth Moss        o3         59.2   0.998 #>  5 aurn   2024-01-01  2024 AH    Aston Hill              o3         63.4   0.991 #>  6 aurn   2024-01-01  2024 ARM6  Armagh Roadside         o3         NA    NA     #>  7 aurn   2024-01-01  2024 BAAR  Ballymena Antrim Road   o3         NA    NA     #>  8 aurn   2024-01-01  2024 BALM  Ballymena Ballykeel     o3         NA    NA     #>  9 aurn   2024-01-01  2024 BAR3  Barnsley Gawber         o3         56.9   0.292 #> 10 aurn   2024-01-01  2024 BBRD  Birkenhead Borough Road o3         NA    NA     #> # ℹ 8,218 more rows import_ukaq_summaries(\"my1\", 2020, data_type = \"monthly\", pivot = \"long\") #> # A tibble: 516 × 10 #>    source date        year month month_label code  site  pollutant  mean capture #>    <chr>  <date>     <int> <int> <fct>       <chr> <chr> <chr>     <dbl>   <dbl> #>  1 aurn   2020-01-01  2020     1 Jan         MY1   Lond… o3         15.5   0.960 #>  2 aurn   2020-02-01  2020     2 Feb         MY1   Lond… o3         21.8   0.978 #>  3 aurn   2020-03-01  2020     3 Mar         MY1   Lond… o3         35.4   0.997 #>  4 aurn   2020-04-01  2020     4 Apr         MY1   Lond… o3         54.7   0.976 #>  5 aurn   2020-05-01  2020     5 May         MY1   Lond… o3         57.1   0.976 #>  6 aurn   2020-06-01  2020     6 Jun         MY1   Lond… o3         41.0   0.993 #>  7 aurn   2020-07-01  2020     7 Jul         MY1   Lond… o3         27.0   0.978 #>  8 aurn   2020-08-01  2020     8 Aug         MY1   Lond… o3         41.8   0.660 #>  9 aurn   2020-09-01  2020     9 Sep         MY1   Lond… o3         31.3   0.781 #> 10 aurn   2020-10-01  2020    10 Oct         MY1   Lond… o3         18.5   0.933 #> # ℹ 506 more rows"},{"path":"https://openair-project.github.io/ukaq/articles/ukaq.html","id":"daily-air-quality-index-daqi","dir":"Articles","previous_headings":"","what":"Daily Air Quality Index (DAQI)","title":"Importing UK Air Quality Data","text":"Pre-calculated Daily Air Quality Indices (‘DAQI’, see https://uk-air.defra.gov.uk/air-pollution/daqi) also available import_ukaq_daqi(). function similar import_ukaq_summaries(), additional nuances: default pivot \"long\". due amount data presented - daily statistic, corresponding index, corresponding band, measurement period. information carried ‘wide’ format alternative selected. pollutant ensures one five DAQI pollutants given - combination NO2, O3, PM10, PM2.5 SO2.","code":"import_ukaq_daqi(\"my1\", 2020) #> # A tibble: 1,624 × 8 #>    source date       code  site     pollutant concentration poll_index poll_band #>    <chr>  <date>     <chr> <chr>    <chr>             <dbl>      <int> <fct>     #>  1 aurn   2020-01-01 MY1   London … no2               72.4           2 Low       #>  2 aurn   2020-01-01 MY1   London … o3                 6             1 Low       #>  3 aurn   2020-01-01 MY1   London … pm10              39             3 Low       #>  4 aurn   2020-01-01 MY1   London … pm2.5             36             4 Moderate  #>  5 aurn   2020-01-01 MY1   London … so2                9.15          1 Low       #>  6 aurn   2020-01-02 MY1   London … no2               66.2           1 Low       #>  7 aurn   2020-01-02 MY1   London … o3                25             1 Low       #>  8 aurn   2020-01-02 MY1   London … pm10              15             1 Low       #>  9 aurn   2020-01-02 MY1   London … pm2.5              9             1 Low       #> 10 aurn   2020-01-02 MY1   London … so2                6.46          1 Low       #> # ℹ 1,614 more rows"},{"path":"https://openair-project.github.io/ukaq/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jack Davison. Author, maintainer.","code":""},{"path":"https://openair-project.github.io/ukaq/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Davison J (2025). ukaq: Access UK Air Quality Monitoring Data. R package version 0.1.0, https://github.com/openair-project/ukaq.","code":"@Manual{,   title = {ukaq: Access UK Air Quality Monitoring Data},   author = {Jack Davison},   year = {2025},   note = {R package version 0.1.0},   url = {https://github.com/openair-project/ukaq}, }"},{"path":[]},{"path":[]},{"path":"https://openair-project.github.io/ukaq/index.html","id":"id_-core-features","dir":"","previous_headings":"","what":"💡 Core Features","title":"Access UK Air Quality Monitoring Data","text":"ukaq small number core functions. Flexible access metadata several hundred UK air pollution monitoring sites import_ukaq_meta(). Straightforward importing hourly data controls start end dates, pollutants interest, flexibly appending site metadata. Access myriad pre-calculated statistics including daily, monthly, annual averages, well statistics aligned UK Daily Air Quality Index.","code":""},{"path":"https://openair-project.github.io/ukaq/index.html","id":"id_-documentation","dir":"","previous_headings":"","what":"📖 Documentation","title":"Access UK Air Quality Monitoring Data","text":"ukaq functions fully documented; access documentation using R IDE choice. Documentation also hosted online package website.  guide openair toolkit can found online book, contains lots code snippets, demonstrations functionality, ideas application openair’s various functions.","code":"?ukaq::import_ukaq_meta"},{"path":"https://openair-project.github.io/ukaq/index.html","id":"id_️-installation","dir":"","previous_headings":"","what":"🗃️ Installation","title":"Access UK Air Quality Monitoring Data","text":"can install development version ukaq GitHub using pak: 🏛️ ukaq primarily maintained Jack Davison. 📃 ukaq licensed MIT License. 🧑‍💻 Contributions welcome wider community. See contributing guide code conduct information.","code":"# install.packages(\"pak\") pak::pak(\"openair-project/ukaq\")"},{"path":"https://openair-project.github.io/ukaq/reference/import_ukaq_daqi.html","id":null,"dir":"Reference","previous_headings":"","what":"Import UK Daily Air Quality Index Data — import_ukaq_daqi","title":"Import UK Daily Air Quality Index Data — import_ukaq_daqi","text":"Imports UK Daily Air Quality Index (DAQI) data selected pollutants, years, sites. Returned information can include relevant daily statistic (e.g., daily average PM10), index (1:10), band (Low, Moderate, High, High), colour associated index /band.","code":""},{"path":"https://openair-project.github.io/ukaq/reference/import_ukaq_daqi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import UK Daily Air Quality Index Data — import_ukaq_daqi","text":"","code":"import_ukaq_daqi(   code = NULL,   year,   source = \"aurn\",   pollutant = NULL,   append_metadata = FALSE,   metadata_columns = c(\"site_type\", \"latitude\", \"longitude\"),   daqi_columns = c(\"concentration\", \"poll_index\", \"poll_band\"),   pivot = \"long\",   progress = NA,   ...,   .class = NULL )"},{"path":"https://openair-project.github.io/ukaq/reference/import_ukaq_daqi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import UK Daily Air Quality Index Data — import_ukaq_daqi","text":"code Specific site codes import. default: NULL code expects vector character values. defines specific sites import filter result specific sites based site codes, available import_ukaq_meta(). Note mismatch code source may result data imported. NULL, default, available data year source returned. year year, range years, import data. required year expects vector integer values. can single year (2020), selection specific years (c(2020, 2021, 2022)), range years (2020:2025). source One UK Monitoring networks import data. default: \"ukaq\" default, \"ukaq\", look sites available networks. combination \"aurn\", \"aqe\", \"saqn\", \"waqn\", \"niaqn\" import data specific monitoring networks. Note mismatch code source may result data imported. DAQI pre-calculated \"lmam\" sites. pollutant One DAQI pollutants import data. default: NULL default, available pollutants imported. pollutant allows specific combination pollutants returned instead. Note DAQI pollutant - .e., one \"no2\", \"pm10\", \"pm2.5\", \"o3\" \"so2\". append_metadata Append site metadata dataframe? default: FALSE TRUE, resulting data.frame site metadata appended. specific columns selected using metadata_columns. metadata_columns Specific metadata columns append data.frame. default: c(\"site_type\", \"latitude\", \"longitude\") append_metadata = TRUE, columns selected appended data. Columns names match import_ukaq_meta(), excluding pollutant-specific columns (e.g., ratification date). daqi_columns Specific DAQI columns include. default: c(\"concentration\", \"poll_index\", \"poll_band\") numerous DAQI-related data can returned within data.frame. option expects vector combination : \"concentration\": measured daily concentration. \"poll_index\": daily pollution index (1-10). \"poll_band\": pollution band (Low, Moderate, High, High). \"colour_index\": colour associated pollution index. \"colour_band\": colour associated pollution band. \"measurement_period\": name statistic presented \"concentration\". pivot dataframe 'wide' 'long'? default: \"wide\" two main ways store air quality data; \"long\" ('pollutant' 'value' columns) \"wide\" (pollutant value stored column). pivot allows users define format prefer data . progress Show progress bar? default: NA TRUE, function print progress bar track individual files imported. FALSE suppressed. NA, default, function work progress bar useful (.e., function run interactive session one remote file accessed). ... used. .class Signifier dataframe class. default: NULL ukaq functions, default, return tbl_dfs tibble package installed, otherwise return data.frames. .class can override behaviour, takes either \"tbl\" \"df\", sets return class tbl_df data.frame respectively.","code":""},{"path":"https://openair-project.github.io/ukaq/reference/import_ukaq_daqi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import UK Daily Air Quality Index Data — import_ukaq_daqi","text":"data.frame","code":""},{"path":"https://openair-project.github.io/ukaq/reference/import_ukaq_daqi.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Import UK Daily Air Quality Index Data — import_ukaq_daqi","text":"thanks Trevor Davies Ricardo Plc preparing hosting data","code":""},{"path":[]},{"path":"https://openair-project.github.io/ukaq/reference/import_ukaq_daqi.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Import UK Daily Air Quality Index Data — import_ukaq_daqi","text":"Jack Davison, David Carslaw","code":""},{"path":"https://openair-project.github.io/ukaq/reference/import_ukaq_measurements.html","id":null,"dir":"Reference","previous_headings":"","what":"Import Continuous UK Air Quality Monitoring Data — import_ukaq_measurements","title":"Import Continuous UK Air Quality Monitoring Data — import_ukaq_measurements","text":"Imports continuous monitoring data UK air quality networks. function defaults importing hourly data, options instead return common time periods.","code":""},{"path":"https://openair-project.github.io/ukaq/reference/import_ukaq_measurements.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import Continuous UK Air Quality Monitoring Data — import_ukaq_measurements","text":"","code":"import_ukaq_measurements(   code,   year,   source = \"ukaq\",   data_type = \"hourly\",   pollutant = NULL,   append_meteorology = TRUE,   append_quality_flag = FALSE,   append_metadata = FALSE,   metadata_columns = c(\"site_type\", \"latitude\", \"longitude\"),   pivot = \"wide\",   progress = NA,   ...,   .class = NULL )"},{"path":"https://openair-project.github.io/ukaq/reference/import_ukaq_measurements.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import Continuous UK Air Quality Monitoring Data — import_ukaq_measurements","text":"code Specific site codes import. required code expects vector character values. defines specific sites import filter result specific sites based site codes, available import_ukaq_meta(). Note mismatch code source may result data imported. year year, range years, import data. required year expects vector integer values. can single year (2020), selection specific years (c(2020, 2021, 2022)), range years (2020:2025). source One UK Monitoring networks import data. default: \"ukaq\" default, \"ukaq\", look sites available networks. combination \"aurn\", \"aqe\", \"saqn\", \"waqn\", \"niaqn\" \"lmam\" import data specific monitoring networks. Note mismatch code source may result data imported. data_type type summary returned? default: \"hourly\" import_ukaq_measurements() can return many different continuous measurement types. follows: \"hourly\": Hourly data (default). \"daily\": Daily average data. \"15_min\": 15-minute average SO2 concentrations. \"8_hour\": 8-hour rolling mean concentrations O3 CO. \"24_hour\": 24-hour rolling mean concentrations particulates. \"daily_max_8\": Maximum daily rolling 8-hour maximum O3 CO. pollutant One pollutants import data. default: NULL default, available pollutants imported. pollutant allows specific combination pollutants returned instead. append_meteorology Append modelled meteorology dataframe? default: TRUE Certain networks AURN accompanied modelled meteorological data obtained WRF model (See https://uk-air.defra.gov.uk/research/air-quality-modelling?view=modelling). Setting append_meteorology = FALSE remove , may useful joining measured meteorological data sourced elsewhere. append_quality_flag Append ratification indicators dataframe? default: FALSE TRUE, additional _qc columns appended data TRUE data ratified FALSE . Specific ratification dates can obtained import_ukaq_meta(). append_metadata Append site metadata dataframe? default: FALSE TRUE, resulting data.frame site metadata appended. specific columns selected using metadata_columns. metadata_columns Specific metadata columns append data.frame. default: c(\"site_type\", \"latitude\", \"longitude\") append_metadata = TRUE, columns selected appended data. Columns names match import_ukaq_meta(), excluding pollutant-specific columns (e.g., ratification date). pivot dataframe 'wide' 'long'? default: \"wide\" two main ways store air quality data; \"long\" ('pollutant' 'value' columns) \"wide\" (pollutant value stored column). pivot allows users define format prefer data . progress Show progress bar? default: NA TRUE, function print progress bar track individual files imported. FALSE suppressed. NA, default, function work progress bar useful (.e., function run interactive session one remote file accessed). ... used. .class Signifier dataframe class. default: NULL ukaq functions, default, return tbl_dfs tibble package installed, otherwise return data.frames. .class can override behaviour, takes either \"tbl\" \"df\", sets return class tbl_df data.frame respectively.","code":""},{"path":"https://openair-project.github.io/ukaq/reference/import_ukaq_measurements.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import Continuous UK Air Quality Monitoring Data — import_ukaq_measurements","text":"data.frame","code":""},{"path":"https://openair-project.github.io/ukaq/reference/import_ukaq_measurements.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Import Continuous UK Air Quality Monitoring Data — import_ukaq_measurements","text":"thanks Trevor Davies Ricardo Plc preparing hosting data","code":""},{"path":"https://openair-project.github.io/ukaq/reference/import_ukaq_measurements.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Import Continuous UK Air Quality Monitoring Data — import_ukaq_measurements","text":"Jack Davison, David Carslaw","code":""},{"path":"https://openair-project.github.io/ukaq/reference/import_ukaq_meta.html","id":null,"dir":"Reference","previous_headings":"","what":"Import UK Air Quality Metadata — import_ukaq_meta","title":"Import UK Air Quality Metadata — import_ukaq_meta","text":"import_ukaq_meta() imports metadata UK air quality monitoring sites. default function returns one row per monitoring site, including site opening closing dates useful meta-data. by_pollutant option return one row per monitoring site pollutant; see import_ukaq_pollutants() definitions. \"site\" column can used functions import data.","code":""},{"path":"https://openair-project.github.io/ukaq/reference/import_ukaq_meta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import UK Air Quality Metadata — import_ukaq_meta","text":"","code":"import_ukaq_meta(   source = \"ukaq\",   year = NA,   by_pollutant = FALSE,   ...,   .class = NULL )  import_ukaq_pollutants(source = \"ukaq\", ..., .class = NULL)"},{"path":"https://openair-project.github.io/ukaq/reference/import_ukaq_meta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import UK Air Quality Metadata — import_ukaq_meta","text":"source One UK Monitoring networks import metadata default: \"ukaq\" default, \"ukaq\", import metadata AURN, four 'devolved' networks, locally managed English monitoring networks. combination \"aurn\", \"aqe\", \"saqn\", \"waqn\", \"niaqn\" , \"lmam\" import data specific monitoring networks. year year, range years, filter data. default: NA default monitoring stations returned regardless open/closed status. year allows users filter sites open specific year, range years. example, year = c(2010, 2020) (year = 2010:2020) return sites open 2010 2020. by_pollutant Return site-pollutant combinations? default: FALSE TRUE, rows resulting data.frame represent monitoring site-pollutant pair, start, end, ratification date reflecting specific pollutant. FALSE, default, row unique monitoring site, start end dates represent opening closing dates site whole. ... used. .class Signifier dataframe class. default: NULL ukaq functions, default, return tbl_dfs tibble package installed, otherwise return data.frames. .class can override behaviour, takes either \"tbl\" \"df\", sets return class tbl_df data.frame respectively.","code":""},{"path":"https://openair-project.github.io/ukaq/reference/import_ukaq_meta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import UK Air Quality Metadata — import_ukaq_meta","text":"data.frame","code":""},{"path":"https://openair-project.github.io/ukaq/reference/import_ukaq_meta.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Import UK Air Quality Metadata — import_ukaq_meta","text":"following metadata columns returned: source : network site associated. Note monitoring sites part multiple networks (e.g., AURN & SAQN) site may feature twice different sources. code : site code, used import data specific sites interest. site : site name, human-readable site code. site_type : description site environment. Read https://uk-air.defra.gov.uk/networks/site-types. latitude longitude : coordinates monitoring station, using World Geodetic System (https://epsg.io/4326). start_date end_date : opening closing dates monitoring station. by_pollutant = TRUE, dates instead first last dates specific pollutants measured. missing value, NA, indicates monitoring ongoing. ratified_to : date data ratified (.e., 'quality checked'). Data date subject change. zone, agglomeration zagglom : UK divided agglomeration zones (large urban areas) non-agglomeration zones air quality assessment. zagglom column coalesces two, listing agglomeration site located within one zone otherwise. local_authority : local authority monitoring station found. lmam_provider lmam_code : specific provider locally managed dataset (e.g., \"londonair\").","code":""},{"path":"https://openair-project.github.io/ukaq/reference/import_ukaq_meta.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Import UK Air Quality Metadata — import_ukaq_meta","text":"thanks Trevor Davies Ricardo Plc preparing hosting data","code":""},{"path":"https://openair-project.github.io/ukaq/reference/import_ukaq_meta.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Import UK Air Quality Metadata — import_ukaq_meta","text":"Jack Davison, David Carslaw","code":""},{"path":"https://openair-project.github.io/ukaq/reference/import_ukaq_summaries.html","id":null,"dir":"Reference","previous_headings":"","what":"Import Monthly and Annual Summaries of UK Air Quality Data — import_ukaq_summaries","title":"Import Monthly and Annual Summaries of UK Air Quality Data — import_ukaq_summaries","text":"Imports either annual monthly summaries matching UK AIR. Unlike data available import_ukaq_measurements(), data appended monthly/annual data capture additional relevant columns (e.g., month character monthly data).","code":""},{"path":"https://openair-project.github.io/ukaq/reference/import_ukaq_summaries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import Monthly and Annual Summaries of UK Air Quality Data — import_ukaq_summaries","text":"","code":"import_ukaq_summaries(   code = NULL,   year,   source = \"aurn\",   data_type = \"annual\",   pollutant = NULL,   append_metadata = FALSE,   metadata_columns = c(\"site_type\", \"latitude\", \"longitude\"),   pivot = \"wide\",   progress = NA,   ...,   .class = NULL )"},{"path":"https://openair-project.github.io/ukaq/reference/import_ukaq_summaries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import Monthly and Annual Summaries of UK Air Quality Data — import_ukaq_summaries","text":"code Specific site codes import. default: NULL code expects vector character values. defines specific sites import filter result specific sites based site codes, available import_ukaq_meta(). Note mismatch code source may result data imported. NULL, default, available data year source returned. year year, range years, import data. required year expects vector integer values. can single year (2020), selection specific years (c(2020, 2021, 2022)), range years (2020:2025). source One UK Monitoring networks import data. default: \"ukaq\" default, \"ukaq\", look sites available networks. combination \"aurn\", \"aqe\", \"saqn\", \"waqn\", \"niaqn\" \"lmam\" import data specific monitoring networks. Note mismatch code source may result data imported. data_type type summary returned? default: \"annual\" import_ukaq_summaries() can return either \"annual\" (default) \"monthly\" summary data. pollutant One pollutants import data. default: NULL default, available pollutants imported. pollutant allows specific combination pollutants returned instead. append_metadata Append site metadata dataframe? default: FALSE TRUE, resulting data.frame site metadata appended. specific columns selected using metadata_columns. metadata_columns Specific metadata columns append data.frame. default: c(\"site_type\", \"latitude\", \"longitude\") append_metadata = TRUE, columns selected appended data. Columns names match import_ukaq_meta(), excluding pollutant-specific columns (e.g., ratification date). pivot dataframe 'wide' 'long'? default: \"wide\" two main ways store air quality data; \"long\" ('pollutant' 'value' columns) \"wide\" (pollutant value stored column). pivot allows users define format prefer data . progress Show progress bar? default: NA TRUE, function print progress bar track individual files imported. FALSE suppressed. NA, default, function work progress bar useful (.e., function run interactive session one remote file accessed). ... used. .class Signifier dataframe class. default: NULL ukaq functions, default, return tbl_dfs tibble package installed, otherwise return data.frames. .class can override behaviour, takes either \"tbl\" \"df\", sets return class tbl_df data.frame respectively.","code":""},{"path":"https://openair-project.github.io/ukaq/reference/import_ukaq_summaries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import Monthly and Annual Summaries of UK Air Quality Data — import_ukaq_summaries","text":"data.frame","code":""},{"path":"https://openair-project.github.io/ukaq/reference/import_ukaq_summaries.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Import Monthly and Annual Summaries of UK Air Quality Data — import_ukaq_summaries","text":"thanks Trevor Davies Ricardo Plc preparing hosting data","code":""},{"path":"https://openair-project.github.io/ukaq/reference/import_ukaq_summaries.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Import Monthly and Annual Summaries of UK Air Quality Data — import_ukaq_summaries","text":"Jack Davison, David Carslaw","code":""},{"path":"https://openair-project.github.io/ukaq/reference/ukaq-package.html","id":null,"dir":"Reference","previous_headings":"","what":"ukaq: Access UK Air Quality Monitoring Data — ukaq-package","title":"ukaq: Access UK Air Quality Monitoring Data — ukaq-package","text":"Importer myriad United Kingdom air quality data, including monitoring station metadata, hourly measured concentrations, pre-calculated statistics.","code":""},{"path":[]},{"path":"https://openair-project.github.io/ukaq/reference/ukaq-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ukaq: Access UK Air Quality Monitoring Data — ukaq-package","text":"Maintainer: Jack Davison jack.davison@ricardo.com (ORCID)","code":""},{"path":"https://openair-project.github.io/ukaq/news/index.html","id":"ukaq-010","dir":"Changelog","previous_headings":"","what":"ukaq 0.1.0","title":"ukaq 0.1.0","text":"lightweight package importing UK air quality data. single import (rlang) two suggested packages (tibble cli).","code":""}]
